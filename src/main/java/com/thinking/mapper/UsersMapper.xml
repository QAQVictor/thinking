<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thinking.mapper.UsersMapper">
	<resultMap id="BaseResultMap" type="com.thinking.bean.Users">
		<id column="UserID" property="userid" jdbcType="INTEGER" />
		<result column="UserName" property="username" jdbcType="VARCHAR" />
		<result column="RealName" property="realname" jdbcType="VARCHAR" />
		<result column="Password" property="password" jdbcType="VARCHAR" />
		<result column="Gender" property="gender" jdbcType="VARCHAR" />
		<result column="Tel" property="tel" jdbcType="VARCHAR" />
		<result column="Email" property="email" jdbcType="VARCHAR" />
		<result column="CreateDate" property="createdate" jdbcType="TIMESTAMP" />
		<result column="LoginCount" property="logincount" jdbcType="VARCHAR" />
		<result column="IsDeleted" property="isdeleted" jdbcType="VARCHAR" />
		<result column="CharacterType" property="charactertype"
			jdbcType="INTEGER" />
		<result column="DepartID" property="departid" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		UserID, UserName, RealName, Password, Gender, Tel, Email,
		CreateDate,
		LoginCount,
		IsDeleted, CharacterType, DepartID
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from users
		where UserID = #{userid,jdbcType=INTEGER}
	</select>
	<select id="selectByUserName" parameterType="com.thinking.bean.Users">
		select
		<include refid="Base_Column_List" />
		from users where UserName=#{username} and password=#{password}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from users
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from users
		where UserID = #{userid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByWhere" parameterType="java.util.List">
		delete	FROM users
		WHERE UserID IN
		<foreach item="id"  collection="list" separator="," open="(" close=")"	>
			#{id}
		</foreach>
	</delete>
	<insert id="insert" parameterType="com.thinking.bean.Users">
		insert into users (UserID,
		UserName, RealName,
		Password, Gender, Tel,
		Email, CreateDate,
		LoginCount,
		IsDeleted, CharacterType, DepartID
		)
		values
		(#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{gender,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP},
		#{logincount,jdbcType=VARCHAR},
		#{isdeleted,jdbcType=VARCHAR},
		#{charactertype,jdbcType=INTEGER}, #{departid,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.thinking.bean.Users">
		insert into users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				UserID,
			</if>
			<if test="username != null">
				UserName,
			</if>
			<if test="realname != null">
				RealName,
			</if>
			<if test="password != null">
				Password,
			</if>
			<if test="gender != null">
				Gender,
			</if>
			<if test="tel != null">
				Tel,
			</if>
			<if test="email != null">
				Email,
			</if>
			<if test="createdate != null">
				CreateDate,
			</if>
			<if test="logincount != null">
				LoginCount,
			</if>
			<if test="isdeleted != null">
				IsDeleted,
			</if>
			<if test="charactertype != null">
				CharacterType,
			</if>
			<if test="departid != null">
				DepartID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				#{tel,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				#{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="logincount != null">
				#{logincount,jdbcType=VARCHAR},
			</if>
			<if test="isdeleted != null">
				#{isdeleted,jdbcType=VARCHAR},
			</if>
			<if test="charactertype != null">
				#{charactertype,jdbcType=INTEGER},
			</if>
			<if test="departid != null">
				#{departid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.thinking.bean.Users">
		update users
		<set>
			<if test="username != null">
				UserName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				RealName = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				Password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				Gender = #{gender,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				Tel = #{tel,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				Email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				CreateDate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="logincount != null">
				LoginCount = #{logincount,jdbcType=VARCHAR},
			</if>
			<if test="isdeleted != null">
				IsDeleted = #{isdeleted,jdbcType=VARCHAR},
			</if>
			<if test="charactertype != null">
				CharacterType = #{charactertype,jdbcType=INTEGER},
			</if>
			<if test="departid != null">
				DepartID = #{departid,jdbcType=INTEGER},
			</if>
		</set>
		where UserID = #{userid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.thinking.bean.Users">
		update users
		set
		UserName = #{username,jdbcType=VARCHAR},
		RealName =
		#{realname,jdbcType=VARCHAR},
		Password = #{password,jdbcType=VARCHAR},
		Gender = #{gender,jdbcType=VARCHAR},
		Tel = #{tel,jdbcType=VARCHAR},
		Email = #{email,jdbcType=VARCHAR},
		CreateDate =
		#{createdate,jdbcType=TIMESTAMP},
		LoginCount =
		#{logincount,jdbcType=VARCHAR},
		IsDeleted =
		#{isdeleted,jdbcType=VARCHAR},
		CharacterType =
		#{charactertype,jdbcType=INTEGER},
		DepartID =
		#{departid,jdbcType=INTEGER}
		where UserID = #{userid,jdbcType=INTEGER}
	</update>
</mapper>